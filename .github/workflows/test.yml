name: Selenium Test Automation CI

on:
  push:
    branches:
      - main  # Trigger on push to main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to main branch
  workflow_dispatch:  # Allows manual triggering of the workflow from GitHub UI

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Checkout the code in the repository

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'  # Use Java 11
          distribution: 'temurin'  # Temurin is the recommended JDK distribution

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository  # Cache Maven dependencies to speed up the workflow
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Maven dependencies
        run: mvn install -DskipTests  # Install dependencies, skipping tests for now

      - name: Install Chrome dependencies (for headless browser)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget curl unzip
          # Add the Google Chrome repository and install Chrome
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install ./google-chrome-stable_current_amd64.deb -y
          sudo apt-get install -y libnss3 libgconf-2-4 libxi6 libxrender1 libxrandr2 libxss1 libgtk-3-0

      - name: Install ChromeDriver
        run: |
          CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Run Selenium Tests with Maven
        run: mvn test -Dheadless=true  # Run the tests using Maven

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target  # Upload the test results
